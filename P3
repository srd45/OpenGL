import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import *


pygame.init()
display = (800, 600)
pygame.display.set_mode(display, DOUBLEBUF | OPENGL)
glClearColor(1, 1, 1, 1)  


glMatrixMode(GL_PROJECTION)
glLoadIdentity()
gluPerspective(45, (display[0] / display[1]), 0.1, 50)
glMatrixMode(GL_MODELVIEW)
glEnable(GL_DEPTH_TEST)  


x, y, z = 0, 0, -10  
angle_X, angle_Y = 0.0, 0.0
scale = 1

def Cube():
    vertices = [
        (-1, -1, -1),
        (1, -1, -1),
        (1, 1, -1),
        (-1, 1, -1),
        (-1, -1, 1),
        (1, -1, 1),
        (1, 1, 1),
        (-1, 1, 1),
    ]

    edges = [
        (0, 1),
        (1, 2),
        (2, 3),
        (3, 0),
        (4, 5),
        (5, 6),
        (6, 7),
        (7, 4),
        (0, 4),
        (1, 5),
        (2, 6),
        (3, 7),
    ]
    
    surfaces = [
        (0, 1, 2, 3),
        (1, 2, 6, 5),
        (2, 3, 7, 6),
        (3, 0, 4, 7),
        (4, 5, 6, 7),
        (0, 1, 5, 4),
    ]
    
    colors = [
        (1.0, 0.0, 0.0),  
        (0.0, 1.0, 0.0),  
        (0.0, 0.0, 1.0),  
        (1.0, 1.0, 0.0),  
        (1.0, 0.0, 1.0),  
        (0.0, 1.0, 1.0)   
    ]

    
    glBegin(GL_QUADS)
    for i, surface in enumerate(surfaces):
        glColor3fv(colors[i]) 
        for vertex in surface:
            glVertex3fv(vertices[vertex])
    glEnd()

    
    glBegin(GL_LINES)
    glColor3f(0, 0, 0)  
    for edge in edges:
        for vertex in edge:
            glVertex3fv(vertices[vertex])
    glEnd()


running = True
clock = pygame.time.Clock()
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        x -= 0.1  
    if keys[pygame.K_RIGHT]:
        x += 0.1  
    if keys[pygame.K_UP]:
        y += 0.1  
    if keys[pygame.K_DOWN]:
        y -= 0.1  
    if keys[pygame.K_q]:
        z += 0.1  
    if keys[pygame.K_e]:
        z -= 0.1  
    if keys[pygame.K_a]:
        angle_X += 1  
    if keys[pygame.K_d]:
        angle_X -= 1  
    if keys[pygame.K_w]:
        angle_Y += 1  
    if keys[pygame.K_s]:
        angle_Y -= 1  
    if keys[pygame.K_r]:
        scale += 0.01  
    if keys[pygame.K_f]:
        scale -= 0.01  
    if scale < 0.1:
        scale = 0.1
    
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glLoadIdentity()

    glTranslatef(x, y, z)
    glRotatef(angle_X, 1.0, 0.0, 0.0)
    glRotatef(angle_Y, 0.0, 1.0, 0.0)
    glScalef(scale, scale, scale)

    Cube()
    pygame.display.flip()
    clock.tick(60) 

pygame.quit()
